#!/usr/bin/env bash

: '

Usage: blah [<options>]

Description of the script

Options:

-f --flag
   Description of the flag
-o --opttodo <arg>
   Description of the todo option and argument

Examples:

blah
blah --opttodo <blah>
'

set -Eeuo pipefail

PROGNAME=${0##*/}
VERSION="0.1"

# Defaults
FLAG=0
OPTTODO=""

_clean_up() { # Perform pre-exit housekeeping
  return
}

_error_exit() {
  echo -e "${PROGNAME}: ${1:-"Unknown Error"}" >&2
  _clean_up
  exit 1
}

_graceful_exit() {
  _clean_up
  exit
}

_signal_exit() { # Handle trapped signals
  case $1 in
    INT)
      _error_exit "Program interrupted by user" ;;
    TERM)
      echo -e "\n$PROGNAME: Program terminated" >&2
      _graceful_exit ;;
    *)
      _error_exit "$PROGNAME: Terminating on unknown signal" ;;
  esac
}

trap "_signal_exit TERM" TERM HUP
trap "_signal_exit INT"  INT

_usage() {
  echo -e "Usage: $PROGNAME [-h|--help] [-o|--opttodo OPTTODO]"
}

_help_message() {
  cat <<- _EOF_
$PROGNAME ver. $VERSION
do todo

$(_usage)

Options:
-h, --help  Display this help message and exit.
-o, --opttodo OPTTODO  do opttodo
  Where 'OPTTODO' is the opttodovaluedescription.

_EOF_
  return
}


if [[ "${BASH_SOURCE[0]}" == "${0}" ]]; then

  _script_dir=$(cd "$(dirname "${BASH_SOURCE[0]}")" &>/dev/null && pwd -P)

  NOF='\033[0m'
  RED='\033[0;31m'
  GREEN='\033[0;32m'
  ORANGE='\033[0;33m'
  BLUE='\033[0;34m'
  PURPLE='\033[0;35m'
  CYAN='\033[0;36m'
  YELLOW='\033[1;33m'
  _msg() {
    echo >&2 -e "${1-}"
  }
  # _msg "${RED}Read parameters:${NOF}"


  while [[ -n ${1-} ]]; do

    case $1 in
      -h | --help)
        _help_message; _graceful_exit ;;
      -f | --flag)
        FLAG=1 ;;
      -o | --opttodo)
        echo "do opttodo"; shift; OPTTODO="$1" ;;
      -* | --*)
        _usage
        _error_exit "Unknown option $1" ;;
      *)
        echo "Argument $1 to process..." ;;
    esac
    shift

  done

  sleep 10

  _msg "${RED}Option ${YELLOW}OPTTODO is${NOF} \"$OPTTODO\" ..."

fi
