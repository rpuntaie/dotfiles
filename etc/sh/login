# Login shell configuration (sourced AFTER interactive configuration)
# ------------------------------------------------------------------------------

# If logged in via SSH, use tmux:
if [ -n "$SSH_CONNECTION" ] \
&& [ -z "$TMUX" ] \
&& command -v tmux >/dev/null \
&& [ -x "$XDG_LIB_HOME"/tmux/tmux-view ]; then
	"$XDG_LIB_HOME"/tmux/tmux-view SSH && exit
fi

printlogo() (
	osname="$(uname -s -r)"
	hostname="$(uname -n)"
	red="$(printf '\033[31m')"
	blue="$(printf '\033[34m')"
	magenta="$(printf '\033[35m')"
	cyan="$(printf '\033[36m')"
	default="$(printf '\033[0m')"

	case "$1" in
		(debian|raspbian)
			printf "$red                             \\n"
			printf     "          .xd§PVkbxc.        \\n"
			printf     "         xP*'      'Vb.      \\n"
			printf     "       'd'     .,.   V.\`     \\n"
			printf     "       (*    .'   .  ::      $default %s\\n" "$osname"
			printf "$red       #     #      ,7       $default on %s\\n" "$hostname"
			printf "$red       V,     *-__ -'        \\n"
			printf     "       'qb                   \\n"
			printf     "         *:,                 \\n"
			printf     "           '-.               \\n"
			printf     "               '             \\n"
			printf     "                             $default\\n"
			;;
		(arch|archarm)
			printf "$blue                            \\n"
			printf      "              /\\            \\n"
			printf      "             /AA\\           \\n"
			printf      "            .'YAA\\          \\n"
			printf      "           /AAAAAA\\         $default %s\\n" "$osname"
			printf "$blue          /AAAAAAAA\\        $default on %s\\n" "$hostname"
			printf "$blue         /AAA/  \\AAA\\       \\n"
			printf      "        /AAA|    |AAP\\      \\n"
			printf      "       /AAAY\\    /YAAa_     \\n"
			printf      "      />*'          '*<\\    \\n"
			printf      "     ^                  ^   \\n"
			printf      "                            $default\\n"
			;;
		(gentoo)
			printf "$cyan           __                \\n"
			printf      "       .-d§§§§§bc,           \\n"
			printf      "      /§§§§§*\"*Y§§§c.        \\n"
			printf      "     (§§§§§§.   )§§§§b,      \\n"
			printf      "     '(§§§§§§bxxI§§§§§§b     $default %s\\n" "$osname"
			printf "$cyan       \`\">§§§§§§§§§§§§§§)    $default on %s\\n" "$hostname"
			printf "$cyan       .?§§§§§§§§§§§§§P\`     \\n"
			printf      "     .A§§§§§§§§§§§§§*'       \\n"
			printf      "     §§§§§§§§§§§\$*\`          \\n"
			printf      "     V§§§§§§§*'\`             \\n"
			printf      "       \`\"\`\`                  \\n"
			printf      "                             $default\\n"
			;;
		(ubuntu)
			printf "$magenta                              \\n"
			printf         "          .-x#XXX#:-.         \\n"
			printf         "       .dXXXXXXXXY*\"<Xb.      \\n"
			printf         "      dXXXXP(^\`\`\`'._.XXXb     \\n"
			printf         "     JXXXP' _\\\\a#a,. 'VXXXA    \\n"
			printf         "    |XP\"*. .XXXXXXD. 'XXXX)   $default %s\\n" "$osname"
			printf "$magenta    (X.  ; (XXXXXXXT''XXXX)   $default on %s\\n" "$hostname"
			printf "$magenta    'XXXX. \`\\XXXXXP  .XXXX'   \\n"
			printf         "     *XXXXb./ \`\` ,·-dXXXX/    \\n"
			printf         "      'YXXXXX#a-a|  .XXY'     \\n"
			printf         "        '+XXXXXXXXX#XP'       \\n"
			printf         "           \`'\"***\"'\`          \\n"
			printf         "                              $default\\n"
			;;
	esac
)
printlogo "$OS_NAME"

# Display the todo file in the home directory:
if [ -e "$HOME"/TODO ]; then
	echo; cat "$HOME"/TODO; echo
fi

