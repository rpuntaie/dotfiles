#!/usr/bin/env sh

# $MAILDIR/$email are the according local mail dirs
# $MAILDIR/_/xyz are created in .dotmuch/post-new according afew/config

# !Requirements on network configuration!
# Emails are retrieved from these files.
# - group or channel name must be = email
# - Path must end in = email
MBSYNCRC=$XDG_CONFIG_HOME/isync/mbsyncrc
# - file = email
# - path must end in = email
GETMAILRCS=$XDG_CONFIG_HOME/getmail/*
# After change call mymailsync

# Mutt account setup is generated automatically.
accmuttdir=$XDG_CONFIG_HOME/mutt/accounts
# this is generated here the mutt-wizard way and sourced from muttrc
genmuttaccs=$XDG_CONFIG_HOME/mutt/mymailsync_generated.muttrc

function _mbox()
{
    for adir in "$1"/{cur,new,tmp}; do
        mkdir -p "$adir"
    done
}
#run after mbsync to create mutt settings for $email
function _accmuttrc()
{
    accmuttrc="$accmuttdir/$(find "$accmuttdir" -type f | grep -m 1 -o "[0-9]-$email.muttrc")"
    if [[ ! -f "$accmuttrc" ]]; then
        accs="$(find "$accmuttdir" -type f | grep -o "[0-9]-.*.muttrc" | sort -n)"
        for x in $(seq 1 9); do echo "$accs" | grep "$x-" >/dev/null 2>&1 || { export idnum="$x"; break ;}; done
        accmuttrc="$accmuttdir/$idnum-$email.muttrc"
    else
        idnum=${accmuttrc%%-*}
        idnum=${idnum##*/}
    fi
    mailfolder="$MAILDIR/$email"
    echo "source $accmuttrc" >> $genmuttaccs # no need to check if there, because new file
    boxes="$(find "$mailfolder/" -name cur | sed "s,$mailfolder/,,g;s,/cur,,")"
    [[ "$boxes" =~ ^[[:space:]]*$ ]] && echo "no mailboxes" && return
    spoolfile=$(echo "$boxes" | grep -i -m 1 inbox | sed -ne 's/.*/+\0/p')
    [[ "$spoolfile" =~ ^[[:space:]]*$ ]] && return
    record=$(echo "$boxes" | grep -i -m 1 sent | sed -ne 's/.*/+\0/p')
    [[ -z $record ]] && _mbox "$mailfolder/Sent" && record="Sent"
    postponed=$(echo "$boxes" | grep -i -m 1 draft | sed -ne 's/.*/+\0/p')
    [[ -z $postponed ]] && _mbox "$mailfolder/Drafts" && postponed="Drafts"
    trash=$(echo "$boxes" | grep -i -m 1 trash | sed -ne 's/.*/+\0/p')
    [[ -z $trash ]] && _mbox "$mailfolder/Trash" && trash="Trash"
    accmutt="${email//[.@]/_}"
    muttsync=$(printf '<sync-mailbox><enter-command>source %s<enter><change-folder>!<enter>;<check-stats>' $accmuttrc)
    cat > "$accmuttrc" <<EOF
#generated by mymailsync
set from = "$email"
set sendmail = "/usr/bin/msmtp -a \$from"
set folder = "$mailfolder"

macro index gm "<shell-escape>mymailsync $email<enter>" "sync mail $email"

unmailboxes *

set spoolfile = "$spoolfile"
set record = "$record"
set postponed = "$postponed"
set trash = "$trash"

folder-hook \$folder '$muttsync'
macro index,pager i$idnum '$muttsync' "switch to $email"

mailboxes =$accmutt ===================== $(echo "$boxes" | sed -e "s/ //g;s/.*/\"=\0\"/g" | tr "\n" " ")
EOF
    for eqbox in $boxes; do
        box=${eqbox##*/}
        box=${box##*.}
        boxi=${box::2}
        boxi=${boxi,,}
        cat >> $accmuttrc <<EOF

macro index,pager i$boxi "<change-folder>=$eqbox<enter>" "go to $box"
macro index,pager M$boxi "<save-message>=$eqbox<enter>" "move mail to $box"
macro index,pager C$boxi "<copy-message>=$eqbox<enter>" "copy mail to $box"
EOF
    done
}

function _path_to_email()
{
    email=$1
    email=${email/#\~/$HOME}
    email=${email#$MAILDIR/}
    email=${email%%/*}
    mkdir -p $MAILDIR/$email
}

function gatheremails()
{
    unset emails
    cat > "$genmuttaccs" <<EOF
# vim: filetype=neomuttrc
# generated by mymailsync
macro index gM '<shell-escape>mymailsync<enter>' "sync all mail"
EOF
    if [[ -f $MBSYNCRC ]]; then
        for store in $(sed -ne 's/^Path\s*//p' $MBSYNCRC); do
            _path_to_email "$store"
            emails+=" $email"
        done
    fi
    for gmrc in $GETMAILRCS; do
        store=$(sed -ne "s/^path\s*=\s*//p" $gmrc)
        store=${store/#\~/$HOME}
        _path_to_email "$store"
        _mbox $store
        emails+=" $email"
    done
}

function syncemails()
{
    for email in $emails; do
        if [[ -f "$XDG_CONFIG_HOME/getmail/$email" ]]; then
            /usr/bin/getmail --rcfile=$email --getmaildir=$XDG_CONFIG_HOME/getmail
        else
            /usr/bin/mbsync -c $MBSYNCRC $email
        fi
    done
    rm $XDG_CONFIG_HOME/getmail/oldmail-* &>/dev/null
    echo notmuch+afew ...
    notmuch new &>/dev/null
    #notmuch also created afew MailMover target mailboxes
}

function muttemails()
{
    for email in $emails; do
        _accmuttrc
    done
}

function _mymailsync()
{
    unset emails

    if [ "$#" -gt 1 ]; then
        echo "One email or none (=sync all)"
        return 1
    fi

    if ! systemctl --type service | grep net | grep active > /dev/null; then
        echo no network
        return 1
    fi

    [[ $1 =~ -.* ]] && echo Optional parameter: email address && return 1

    _path_to_email "$1"
    emails="$email"
    [[ $emails == "" ]] && gatheremails && syncemails && muttemails && return 0
    syncemails
    return 0
}

if [[ "${BASH_SOURCE[0]}" == "${0}" ]]; then
    _mymailsync $@ && exit $?
fi
