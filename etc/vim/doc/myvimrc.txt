==============================================================================
MY VIM RC                                                            *myvimrc*

Generated:
`stpl ~/dotfiles/etc/vim/doc/myvimrc.txt.stpl ~/dotfiles/etc/vim/doc/myvimrc.txt`


==============================================================================
MAPPINGS                                                           *myvimmaps*

`*#`: search down|up on visual region
`*:`: numberpad tags move
`+-`: numberpad quickfix move
`,aa`: :Tabular
`,bd`: close buffer, but not window
`,ec[c]`: (re)number
`,e{ep}`: edit vimrc | dein repos
`,f{sgctefid}`: cscope find
`,gb`: vimgrep in buffers
`,gg`: vimgrep specify or visual region
`,gr`: specify replace for visual region
`,hh`: vim help for word under cursor
`,j2`: to jira (pip rst2confluence needed}
`,ls`: load spelling
`,l{ramkj}`: load russian accents mathematic fntc english
`,m`: run in term (two windows, one term)
`,ww`: look up in wordnet (wn needed)
`<C-{kjhl}>`: go to window
`<M-V>|<M-C>`: copy|paste clipboard
`SD`: cd to current symlinked file
`SR`: Replace from default register without loosing it
`SW`: fzf search for word under cursor
`Y`: yank till end of line, like D
`gx`: open browser and search
`gx{lngpw}`: open local, nonlocal; google,python,wikipedia
`m`: match in o v n mode
`s`: <nop>, free for other mappings
`sb`: fzf Buffers
`sf` : fzf Files GFiles
`sg` : fzf GFiles
`sh`: fzf History
`sn`: NERDTreeToggle
`sp`: yank current file full path
`sx`: syntax fromstart
`s{.;:/}`: fzf Buffer tags, tags, : or / history
`{jk}=g{jk}`: treat as break lines when wrap on
`{ss SS}`: Insert empty line below|above

==============================================================================
COMMANDS                                                       *myvimcommands*

`:F{Ff}` font size
`:MM` build using Makeshift
`:PrettyXML` format XML
`:Redir` either shell or vim command
`:SD` cd to current file
`:SW` search for word under cursor and place into quickfix list
`:TD` execute .local/bin/todo to quickfix list
`:TrimSpaces` accepts range

==============================================================================
PLUGINS                                                            *myplugins*

Links to plugin mappings::
|:Tabularize| format
|AleToggle| linting (:ALEToggle)
|NERDCommenterFunctionality| ,c{ cnmisy$Aalbu}
|NERDTreeMappings| [sn] file browser
|Nvim-R-use| \rf \rq \d ... in R file
|UltiSnips| snippets
|VdebugStart| <F5>pydbg -d localhost:9000 x.py<F2><F3><F10><F6>
|barbaric-functions| (ibus) input method only in insert mode
|deoplete-functions| complete using |deoplete-sources|
|easymotion-default-mappings| ,,{fFtTwWbB(g)eEjknN}
|fugitive-commands| :Gxxx like :Gdiffsplit
|fzf-vim-commands| :Snippets :Helptags :Marks |myvmimaps|
|gitv-usage| :Gitv[!]
|makeshift| [:MM] builds the current project
|matchup-default-mappings|  % {gv[]zai(ds)(cs}%
|plugin/02tlib.vim|  TScratch TBrowseOutput
|sandwich-keymappings| s{adr} dasX da<wait>s (https://github.com/machakann/vim-sandwich/issues/62)
|sleuth| detect tab settings heuristically, :Sleuth
|trans-usage| ,tt,
|unicode-plugin| :UnicodeTable i: <C-X><C-G>
|vcscommand-mappings| works not only for git
|vebugger-gdb| :VBGstartGDB, ` for leader
|vim_py3_rst| python and rst helpers
|vimproc-commands| asynchronous execution
|vimtex-default-mappings| for latex

 vim:tw=78:sw=4:ts=4:et:ft=help:norl:
