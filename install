#!/usr/bin/bash

# URL of this file
# https://git.io/fjVcp

dotfiles_url="https://github.com/rpuntaie/dotfiles" #usrstuff line

_dotfiles_check_packages(){
  if [ ! -f /usr/bin/stow ]; then
      echo "you need to do: sudo pacman -S stow" >&2 && return 1
  fi
  if [ ! -f /usr/bin/xdg-user-dirs-update ]; then
      echo "you need to do: sudo pacman -S xdg-user-dirs" >&2 && return 1
  fi
  return 0
}

_dotfiles_restowdots(){
  cd ~
  for DOTDIR in $(cd ~ && ls | grep dotfiles); do
    break
  done
  DOTDIR=${DOTDIR:-.dotfiles}
  if [ -d $DOTDIR ]; then
    cd $DOTDIR
    if [ ! "$(git config --get remote.origin.url)" = "$dotfiles_url" ]; then
      echo "This install script is for a different dotfiles" >&2
      exit 1
    fi
    cd ~
    bash $DOTDIR/bin/restowdots
  else
    dotfiles_new_install=true
    git clone $dotfiles_url $DOTDIR
    bash $DOTDIR/bin/restowdots -S
  fi
}

#activate the variable defined in .pam_environment
_dotfiles_pam_environment(){
  eval "$(sed -n -e "s/DEFAULT=/=/p" .pam_environment | sed -n -e '/OVERRIDE\|@{\|:/!p' | sed "s/ //g" | sed "s/^.*/export \0/")"
}

_dotfiles_fonts(){
  fc-cache -fv
}

_dotfiles_python(){
  bash ~/$DOTDIR/bin/my_python
}

_dotfiles_nodejs(){
  bash ~/$DOTDIR/bin/my_nodejs
}

_dotfiles_scheme(){
  raco pkg install scheme-lib
  raco pkg install r5rs-lib
  raco pkg install cext-lib
}

_dotfiles_weechat(){
  # weechat: no symlink, because it changes the files
  if which weechat; then
    rsync -a ~/$DOTDIR/etc/weechat/ ~/.local/var/lib/weechat/
    sed -i "s/WEENAME/rpuntaie/g" ~/.local/var/lib/weechat/irc.conf # usrstuff line
    mkdir -p ~/.local/var/lib/weechat/ssl
    cd ~/.local/var/lib/weechat/ssl
    openssl req -nodes -newkey rsa:2048 -keyout relay.pem -x509 -days 365 -out relay.pem -subj "/C=AT/ST=AT/L=AT/O=ME/OU=IT/CN=me.org"
  fi
}

_dotfiles_email(){
  if which mutt; then
    # mw into ~/.local/bin
    ~/.local/bin/ghi rpuntaie/mailwizard ~/.local
    #setup email usrstuff:
    rm -rf ~/.local/etc/{isync,msmtp,getmail,mutt/accounts,mutt/mw_*}
    a=roland.puntaier@chello.at mwtype=offline mwaddr=$a mwlogin=$a mwpass=magenta.at/$a mwserverinfo="chello.at,mail.upcmail.at,995,mail.upcmail.at,465" mwname="Roland Puntaier" ~/.local/bin/mw add
    a=roland.puntaier@gmail.com mwtype=offline mwaddr=$a mwlogin=$a mwpass=gmail/$a mwserverinfo="gmail.com,imap.gmail.com,993,smtp.gmail.com,587" mwname="Roland Puntaier" ~/.local/bin/mw add
    a=puntaier.roland@gmail.com mwtype=offline mwaddr=$a mwlogin=$a mwpass=gmail/$a mwserverinfo="gmail.com,imap.gmail.com,993,smtp.gmail.com,587" mwname="Puntaier Roland" ~/.local/bin/mw add
    a=dontbite71@gmail.com mwtype=offline mwaddr=$a mwlogin=$a mwpass=gmail/$a mwserverinfo="gmail.com,imap.gmail.com,993,smtp.gmail.com,587" mwname="Dont Bite" ~/.local/bin/mw add
  fi
}

_clone_github_mine(){ #usrstuff
  bash ~/$DOTDIR/bin/githubmine
}

_perl_repl(){ #usrstuff
  echo | cpan
  cpanm Devel::REPL
}

_config_postgres(){
  sudo -u postgres initdb -D /var/lib/postgres/data
  sudo -u postgres createuser roland
  systemctl enable --now postgresql
  createdb roland -U postgres
}

#main
if [ "${BASH_SOURCE[0]}" = "${0}" ]; then
  _dotfiles_check_packages || exit $?
  _dotfiles_restowdots
  cd ~
  _dotfiles_pam_environment
  if [ -n "$dotfiles_new_install" ] && $dotfiles_new_install; then
    _dotfiles_fonts
    _dotfiles_python
    _dotfiles_nodejs
    _dotfiles_scheme
    _dotfiles_weechat
    _dotfiles_email
    _clone_github_mine
    _perl_repl
    _config_postgres
    go get -u github.com/motemen/gore/cmd/gore
  fi
  echo -e "\033[0;32mLog out and in, to activate the environment.
First time vim and zsh will install plugins."
fi


#rollarch interprets lines starting with "^#PKG: ", "^#REPO: " and "^#DFN: ".

#DFN: KM=us
#DFN: CL=99
#DFN: LA_NG="de_DE ru_RU"
#DFN: ZONE=Vienna
#DFN: AIP2=1.108

#rpuntaie-meta needs about 40GB disk space
#rpuntaie-meta on https://github.com/rpuntaie/rollarch
#rollarch rpuntaie-meta is served from another Arch on the LAN via AIP2
#PKG: rpuntaie-meta

##else with less packages ##-># and add a # above
##PKG: base
##PKG: base-devel
##PKG: hwinfo
##PKG: nfs-utils
##PKG: devtools
##PKG: dialog
##PKG: wpa_supplicant
##PKG: ifenslave
##PKG: ifplugd
##PKG: ntp
##PKG: stow
##PKG: ripgrep
##PKG: fd
##PKG: bc
##PKG: tmux
##PKG: wget
##PKG: fzf
##PKG: udisks2
##PKG: unzip
##PKG: pacman-contrib
##PKG: bat
##PKG: ncdu
##PKG: the_silver_searcher
##PKG: p7zip
##PKG: ranger
##PKG: mtpfs
##PKG: pass
##PKG: openssh-askpass
##PKG: lsof
##PKG: systemd-resolvconf
##PKG: cscope
##PKG: ctags
##PKG: llvm
##PKG: gdb
##PKG: zsh-syntax-highlighting
##PKG: zsh-autosuggestions
##PKG: zsh-completions
##PKG: zsh-history-substring-search
##PKG: neovim
##PKG: vim-spell-en
##PKG: python-scipy
##PKG: python-sympy
##PKG: python-matplotlib
##PKG: python-pip
##PKG: python-mock
##PKG: python-pytest-mock
##PKG: python-pytest-cov
##PKG: python-wheel
##PKG: python-pandas
##PKG: python-lxml
##PKG: python-pyx
##PKG: python-bottle
##PKG: python-cairosvg
##PKG: python-click
##PKG: python-doit
##PKG: ipython
##PKG: pandoc
##PKG: alsa-utils
##PKG: pulseaudio-alsa
##PKG: pulsemixer
##PKG: xf86-video-intel
##PKG: xorg-server
##PKG: xorg-apps
##PKG: ibus-libpinyin
##PKG: ibus-m17n
##PKG: xdg-user-dirs
##PKG: wmctrl
##PKG: xmonad-contrib
##PKG: urxvt-perls
##PKG: xorg-xinit
##PKG: dmenu
##PKG: scrot
##PKG: slock
##PKG: libnotify
##PKG: dunst
##PKG: dex
##PKG: inkscape
##PKG: vlc
##PKG: firefox
##PKG: w3m
##PKG: browserpass-firefox
##PKG: eom
##PKG: feh
##PKG: zathura-djvu
##PKG: zathura-pdf-mupdf
##PKG: gvim
##PKG: boost
##PKG: cmake
##PKG: meson

