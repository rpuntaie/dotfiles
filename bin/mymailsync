#!/usr/bin/env sh

_MBSYNCRC_="$(cat `which mbsync` | sed -ne 's/.*mbsync -c \([^ ]*\) .*/\1/p')"
MBSYNCRC=`eval echo $_MBSYNCRC_`

CHANNEL=$(cat $MBSYNCRC | sed -ne "s/Group\s*//p")
if [[ -z $CHANNEL ]]; then
    CHANNEL=$(cat $MBSYNCRC | sed -ne "s/Channel\s*//p" | sort -u)
fi

function _muttrc()
{
    local email=$1
    cat > $MAILDIR/${email}.muttrc <<EOF
#generated by mymailsync
set from = "$email"
set sendmail = "/usr/bin/msmtp -a \$from"
set folder = "$MAILDIR/$email"
set spoolfile = "+INBOX"
set record = "+Sent"
set postponed = "+Drafts"
set trash = "+Trash"
EOF
}

function _maildirs()
{
    local LOCALSTORES=$(cat $MBSYNCRC | sed -ne "s/Path\s*//p")
    echo "#generated by mymailsync" > $MAILDIR/accounts.muttrc
    for store in $LOCALSTORES; do
        local STOREPATH=${store/#\~/$HOME}
        mkdir -p $STOREPATH
        local _email=${STOREPATH#$MAILDIR/}
        local email=${_email%/}
        _muttrc $email
        echo "source \$MAILDIR/${email}.muttrc
folder-hook \$folder 'source \$MAILDIR/${email}.muttrc'
        " >> $MAILDIR/accounts.muttrc
    done
}

function _sync()
{
    for account in $CHANNEL; do
        mbsync $account
    done
    notmuch new
    #notmuch also created afew MailMover target mailboxes
}

function _mailboxes()
{
    tree -df $MAILDIR | sed -ne "s,^[^/]*/,,p" | sed -ne "s,/cur,,p" | sed -e "s,.*,\0 \\\\,g"
    #tree -df $MAILDIR | sed -ne "s,^.*$MAILDIR/,,p" | sed -ne "s,/cur,,p" | sed -e "s/.*/+\0/g"
}

if [[ "${BASH_SOURCE[0]}" == "${0}" ]]; then
    if [[ ! -f $MAILDIR/aliases ]]; then
        touch $MAILDIR/aliases
    fi
    _maildirs
    _sync
    echo 'mailboxes = \' > $MAILDIR/mailboxes
    _mailboxes >> $MAILDIR/mailboxes
fi
