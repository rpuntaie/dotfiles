#!/usr/bin/env bash

: '

Usage:

mykvm <img> - <iso>
mykvm <img>

    #samba from guest:
    #mkdir roland
    #mount -t cifs -o rw,user=roland //192.168.1.108/roland roland

    #ssh-keygen on client first then from host:
    #ssh -o USERKnownHostsFile=/dev/null root@192.168.1.108 -p 10022


mykvm <img> bridge <iso>
mykvm <img> bridge

    # like another computer on the LAN



CTRL+ALT+2 => monitor
    help
    screendump
    stop/cont
    system_powerdown
    savevm/loadvm/delvm <name>
CTRL+ALT+1 => back to vm
CTRL+ALT+F => fullscreen

'

IMG=$1
NET=$2
ISO=$3

mkdir -p $HOME/myvm/kvm

cd $HOME/myvm/kvm

nicbr0() {
    sudo ip link set dev $1 promisc on up &> /dev/null
    sudo ip addr flush dev $1 scope host &>/dev/null
    sudo ip addr flush dev $1 scope site &>/dev/null
    sudo ip addr flush dev $1 scope global &>/dev/null
    sudo ip link set dev $1 master br0 &> /dev/null
}
_nicbr0() {
    sudo ip link set $1 promisc off down &> /dev/null
    sudo ip link set dev $1 nomaster &> /dev/null
}

if [ "$NET" == "bridge" ]; then
    HASBR0="$( ip link show | grep br0 )"
    if [ -z $HASBR0 ] ; then
        ROUTER="192.168.1.1"
        SUBNET="192.168.1."
        NIC=$(ip link show | grep enp | grep 'state UP' | head -n 1 | cut -d":" -f 2 | xargs)
        IPADDR=$(ip addr show | grep -o "inet $SUBNET\([0-9]*\)" | cut -d ' ' -f2)
        sudo ip link add name br0 type bridge &> /dev/null
        sudo ip link set dev br0 up
        sudo ip addr add $IPADDR/24 brd + dev br0
        sudo ip route del default &> /dev/null
        sudo ip route add default via $ROUTER dev br0 onlink
        nicbr0 $NIC
        sudo iptables -I FORWARD -m physdev --physdev-is-bridged -j ACCEPT
    fi

    USERID=$(whoami)
    precreationg=$(ip tuntap list | cut -d: -f1 | sort)
    sudo ip tuntap add user $USERID mode tap
    postcreation=$(ip tuntap list | cut -d: -f1 | sort)
    TAP=$(comm -13 <(echo "$precreationg") <(echo "$postcreation"))
    nicbr0 $TAP

    NSTR="-net tap,ifname=$TAP,script=no,downscript=no,vhost=on"
else
    NSTR="-nic user,net=192.168.0.0/24,hostfwd=tcp::10022-:22,smb=/home/roland"
fi

if ! [ -z "$ISO" ]; then
    WITHISO="-cdrom $ISO -boot order=d"
else
    : 'UEFI'
    # WITHISO="-bios /usr/share/edk2-ovmf/x64/OVMF.fd"
fi

printf -v MACADDR "52:54:%02x:%02x:%02x:%02x" $(( $RANDOM & 0xff)) $(( $RANDOM & 0xff )) $(( $RANDOM & 0xff)) $(( $RANDOM & 0xff ))
qemu-system-x86_64 -net nic,macaddr=$MACADDR,model=virtio $NSTR $WITHISO -name $IMG -drive file=${IMG},format=qcow2 -m 4G -enable-kvm -cpu host -smp 4

_nicbr0 $TAP
sudo ip link set dev $TAP down &> /dev/null
sudo ip tuntap del $TAP mode tap

if [ -z $HASBR0 ] ; then
    _nicbr0 $NIC
    sudo ip addr del dev br0 $IPADDR/24 &> /dev/null
    sudo ip link set dev br0 down
    sudo ip link delete br0 type bridge &> /dev/null
    sudo ip route del default &> /dev/null
    sudo ip link set dev $NIC up
    sudo ip route add default via $ROUTER dev $NIC onlink &> /dev/null
fi

