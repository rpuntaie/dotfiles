#!/usr/bin/env bash

: '

Usage:

mykvm <img> - <iso>
mykvm <img>

    #samba from guest:
    #mkdir roland
    #mount -t cifs -o rw,user=roland //192.168.1.108/roland roland

    #ssh-keygen on client first then from host:
    #ssh -o USERKnownHostsFile=/dev/null root@192.168.1.108 -p 10022

mykvm <img> bridge <iso>
mykvm <img> bridge

    # lika another computer on the LAN

CTRL+ALT+2 => monitor
    help
    screendump
    stop/cont
    system_powerdown
    savevm/loadvm/delvm <name>
CTRL+ALT+1 => back to vm
#ssh from host ip:port to guest:
ssh <host ip> -p 10022

'

IMG=$1
NET=$2
ISO=$3

cd $HOME/myvm/kvm

nicbr0() {
    sudo ip link set dev $1 promisc on up
    sudo ip addr flush dev $1 scope host &>/dev/null
    sudo ip addr flush dev $1 scope site &>/dev/null
    sudo ip addr flush dev $1 scope global &>/dev/null
    sudo ip link set dev $1 master br0
}

printf -v MACADDR "52:54:%02x:%02x:%02x:%02x" $(( $RANDOM & 0xff)) $(( $RANDOM & 0xff )) $(( $RANDOM & 0xff)) $(( $RANDOM & 0xff ))
QEMU="qemu-system-x86_64 -net nic,macaddr=$MACADDR,model=virtio"

if [ "$NET" == "bridge" ]; then
    NIC=$(ip link show | grep enp | grep 'state UP' | head -n 1 | cut -d":" -f 2 | xargs)
    IPADDR=$(ip addr show | grep -o "inet 192.168\([\.0-9]*\)" | cut -d ' ' -f2)

    sudo /usr/bin/ip link add name br0 type bridge
    sudo /usr/bin/ip link set dev br0 up

    USERID=$(whoami)
    precreationg=$(/usr/bin/ip tuntap list | /usr/bin/cut -d: -f1 | /usr/bin/sort)
    sudo /usr/bin/ip tuntap add user $USERID mode tap
    postcreation=$(/usr/bin/ip tuntap list | /usr/bin/cut -d: -f1 | /usr/bin/sort)
    TAP=$(comm -13 <(echo "$precreationg") <(echo "$postcreation"))

    nicbr0 $TAP
    nicbr0 $NIC

    sudo ip addr add $IPADDR/24 brd + dev br0
    sudo ip route del default &> /dev/null
    sudo ip route add default via 192.168.1.1 dev br0 onlink
    sudo iptables -I FORWARD -m physdev --physdev-is-bridged -j ACCEPT

    NSTR="-net tap,ifname=$TAP,script=no,downscript=no,vhost=on"
else
    NSTR="-nic user,net=192.168.0.0/24,hostfwd=tcp::10022-:22,smb=/home/roland"
fi

if ! [ -z "$ISO" ]; then
    WITHISO="-cdrom $ISO -boot order=d"
fi

$QEMU $NSTR $WITHISO -name $IMG -drive file=${IMG},format=qcow2 -m 4G -enable-kvm -cpu host -smp 4

if [ "$NET" == "bridge" ]; then
    sudo ip link set $TAP promisc off down
    sudo ip link set dev $TAP nomaster
    sudo ip link set dev $TAP down
    sudo ip tuntap del $TAP mode tap
    sudo ip addr del dev br0 $IPADDR/24
    sudo ip link set dev br0 down
    sudo ip link delete br0 type bridge
    sudo ip route del default
    sudo ip route add default via 192.168.1.1 dev $NIC onlink
fi


